Character Escaping and Class Naming

This is a funny little item that I found over the weekend. I work SMACSS/OOCSS-style and have been racking my brains trying to figure out a way to separate base classes from extender classes from related-but-independent classes in CSS. Many are making the move towards BEM-style class naming and Harry Roberts offers a very justified argument as to why he uses it. I think this really comes done to personal preference.

So, poke around a bit on the internets this weekend and remembering a talk that Paul Irish gave on the use of UTF-8 characters in HTML and CSS, I began to think about applying that more sytematically to modular class names. Here's what I found...

CSS character escape sequences | Mathias Bynens
http://mathiasbynens.be/notes/css-escapes

Using character escapes in markup and CSS - CSS escapes | W3.org
http://www.w3.org/International/questions/qa-escapes#cssescapes

4.1.3 Characters and case | W3.org
http://www.w3.org/TR/CSS2/syndata.html#escaped-characters

G.1 Grammar | W3.org
http://www.w3.org/TR/CSS21/grammar.html#scanner

Okay, I don't really expect you to read all of that just to get through this brief article, so here is the part that I was particularly excited about...

"The following characters have a special meaning in CSS: !, ", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \, ], ^, `, {, |, }, and ~."

The above characters can be escaped with a leading backslash (\). So, if say, you want to use "+" within a class name, you would escape it as (\+). In the HTML, you would just call that class using the unescaped character "+".

CSS
base\+ext { property: value; }

HTML
<element class="base+ext"></element>

"Yeah? So what."
It may sound gimmicky, but lets put it into the perspective of modular class naming. If you use the pattern of base class/sub-class, you probably include the name of your base class in the name of your sub-class. We now have a vocabulary of characters to extend this "syntax" that we didn't previously know we could use!

"Why not use BEM-style? Harry's already done the work in explaining its use."
Yes, he has. And it is very well-explained. I'll call "personal preference" on this one. At my current job, we are slowly updating the CSS to move away from underscores to using hyphens. Mixing both in a newer convention would be confusing and make the legacy styles even harder to update.

"What about Find?"
Yes, it is true that, if you adopt this, you will have to be constant aware of the class name not being exactly the same in CSS as it appears in HTML. But I think the payoff of reading the style in the mark-up with a more robust character set will override the differences in CSS.

Anyways, this is just a quick 'n dirty. I have a test page here. Please share your thoughts in the Comments.

Cheers!